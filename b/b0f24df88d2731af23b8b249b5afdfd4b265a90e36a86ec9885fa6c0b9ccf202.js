if(Object.isUndefined(Effect))
throw("dragdrop.js requires including script.aculo.us' effects.js library");var Droppables={drops:[],remove:function(){},add:function(){},findDeepestChild:function(){},isContained:function(){},isAffected:function(){},deactivate:function(){},activate:function(){},show:function(){},fire:function(){},reset:function(){}};var Draggables={drags:[],observers:[],register:function(){},unregister:function(){},activate:function(){},deactivate:function(){this.activeDraggable=null;},updateDrag:function(){},endDrag:function(){},keyPress:function(){},addObserver:function(observer){this.observers.push(observer);this._cacheObserverCallbacks();},removeObserver:function(){},notify:function(){},_cacheObserverCallbacks:function(){}};var Draggable=Class.create({initialize:function(){},destroy:function(){},currentDelta:function(){},initDrag:function(){},startDrag:function(){},updateDrag:function(){},finishDrag:function(){},keyPress:function(){},endDrag:function(){},draw:function(){},stopScrolling:function(){},startScrolling:function(){},scroll:function(){},_getWindowScroll:function(){}});Draggable._dragging={};var SortableObserver=Class.create({initialize:function(){},onStart:function(){this.lastValue=Sortable.serialize(this.element);},onEnd:function(){}});var Sortable={SERIALIZE_RULE:/^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,sortables:{},_findRootElement:function(){},options:function(){},destroy:function(){},create:function(){},findElements:function(element,options){return Element.findChildren(element,options.only,options.tree?true:false,options.tag);},findTreeElements:function(){},onHover:function(){},onEmptyHover:function(){},unmark:function(){},mark:function(){},_tree:function(){},tree:function(){},_constructIndex:function(){},sequence:function(){},setSequence:function(){},serialize:function(){}};Element.isParent=function(){};Element.findChildren=function(){};Element.offsetSize=function(){}